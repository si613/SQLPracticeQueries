
--SIMPLE QUERIES:

--1. LIST ALL THE EMPLOYEE DETAILS.
SELECT * FROM Employee

--2. LIST ALL THE DEPARTMENT DETAILS
SELECT * FROM Department

--3. LIST ALL JOB DETAILS.
SELECT * FROM Job

--4. LIST ALL THE LOCATIONS.
SELECT * FROM Location

--5. LIST OUT THE FIRSTNAME, LASTNAME, SALARY, COMMISSION FOR ALL EMPLOYEES.
SELECT First_Name,Last_Name,Salary,Comm FROM Employee

--6. LIST OUT EMPLOYEEID,LAST NAME, DEPARTMENT ID FOR ALL EMPLOYEES AND ALIAS EMPLOYEEID AS "ID OF THE EMPLOYEE", 
--LAST NAME AS "NAME OF THE EMPLOYEE", DEPARTMENTID AS "DEP_ID".
SELECT Employee_ID AS 'ID OF THE EMPLOYEE', Last_Name AS 'NAME OF THE EMPLOYEE', EmpDepartment_ID AS 'DEP_ID' FROM Employee

--7. LIST OUT THE EMPLOYEES ANNUAL SALARY WITH THEIR NAMES ONLY.
SELECT Salary*12 AS 'ANNUAL SALARY', First_Name + ' ' + Last_Name as FULL_NAME FROM Employee

--WHERE CONDITION:
--1. LIST THE DETAILS ABOUT "SMITH"
SELECT * FROM Employee WHERE 'SMITH' IN (First_Name,Last_Name)

--2. LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 20.
SELECT * FROM Employee WHERE EmpDepartment_ID = 20

--3. LIST OUT THE EMPLOYEES WHO ARE EARNING SALARY BETWEEN 3000 AND 4500.
SELECT * FROM Employee WHERE Salary BETWEEN 3000 AND 4500

--4. LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 10 OR 20.
SELECT * FROM Employee WHERE EmpDepartment_ID IN (10,20)

--5. FIND OUT THE EMPLOYEES WHO ARE NOT WORKING IN DEPARTMENT 10 OR 30.
SELECT * FROM Employee WHERE EmpDepartment_ID NOT IN (10,30)

--6. LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S'.
SELECT * FROM Employee WHERE Last_Name LIKE 'S%'

--7. LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S' AND ENDS WITH 'H'.
SELECT * FROM Employee WHERE Last_Name LIKE 'S%H'

--8. LIST OUT THE EMPLOYEES WHOSE NAME LENGTH IS 4 AND START WITH 'S'.
SELECT * FROM Employee WHERE Last_Name LIKE 'S%' AND  LEN(First_Name)=4

--9. LIST OUT EMPLOYEES WHO ARE WORKING IN DEPARTMENT 10 AND DRAW THE SALARIES MORE THAN 3500.
SELECT * FROM Employee WHERE EmpDepartment_ID=10 AND Salary>3500

--10. LIST OUT THE EMPLOYEES WHO ARE NOT RECEVING COMMISSION.
SELECT * FROM Employee WHERE Comm IS NULL

--ORDER BY CLAUSE:
--1. LIST OUT THE EMPLOYEE ID, LAST NAME IN ASCENDING ORDER BASED ON THE EMPLOYEE ID.
SELECT Employee_ID,Last_Name FROM Employee ORDER BY Employee_ID

--2. LIST OUT THE EMPLOYEE ID, NAME IN DESCENDING ORDER BASED ON SALARY.
SELECT Employee_ID,Last_Name,Salary FROM Employee ORDER BY Salary DESC

--3. LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER AND
SELECT * FROM Employee ORDER BY Last_Name

--4. LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER AND THEN ON DEPARTMENT_ID IN DESCENDING ORDER.
SELECT * FROM Employee ORDER BY Last_Name, EmpDepartment_ID DESC

--GROUP BY & HAVING CLAUSE

--1. HOW MANY EMPLOYEES WHO ARE IN DIFFERENT DEPARTMENTS WISE IN THE ORGANIZATION.

SELECT EmpDepartment_ID, COUNT(Employee_ID) AS EmpCnt FROM Employee GROUP BY EmpDepartment_ID

--2. LIST OUT THE DEPARTMENT WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARY OF THE EMPLOYEES.
SELECT EmpDepartment_ID, MAX(Salary) AS MaxSal, MIN(Salary) AS MinSal, AVG(Salary) AS AvgSal 
FROM Employee GROUP BY EmpDepartment_ID

--3. LIST OUT JOB WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARIES OF THE EMPLOYEES.
SELECT EmpJob_ID, MAX(Salary) AS MaxSal, MIN(Salary) AS MinSal, AVG(Salary) AS AvgSal 
FROM Employee GROUP BY EmpJob_ID

--4. LIST OUT THE NUMBER OF EMPLOYEES JOINED IN EVERY MONTH IN ASCENDING ORDER.
SELECT MONTH(Hire_Date) AS 'Month', COUNT(Employee_ID) AS 'Count' FROM Employee 
GROUP BY MONTH(Hire_Date) ORDER BY MONTH(Hire_Date)

--5. LIST OUT THE NUMBER OF EMPLOYEES FOR EACH MONTH AND YEAR, IN THE ASCENDING ORDER BASED ON THE YEAR, MONTH.
SELECT YEAR(Hire_Date), MONTH(Hire_Date), COUNT(Employee_ID) FROM Employee 
GROUP BY YEAR(Hire_Date), MONTH(Hire_Date) ORDER BY YEAR(Hire_Date), MONTH(Hire_Date)

--6. LIST OUT THE DEPARTMENT ID HAVING ATLEAST FOUR EMPLOYEES.
SELECT EmpDepartment_ID, COUNT(Employee_ID) FROM Employee 
GROUP BY EmpDepartment_ID HAVING COUNT(Employee_ID)>=4

--7. HOW MANY EMPLOYEES JOINED IN JANUARY MONTH.
SELECT MONTH(Hire_Date), COUNT(Employee_ID) FROM Employee 
GROUP BY MONTH(Hire_Date) HAVING MONTH(Hire_Date)=1

--8. HOW MANY EMPLOYEES JOINED IN JANUARY OR SEPTEMBER MONTH.
SELECT MONTH(Hire_Date), COUNT(Employee_ID) FROM Employee 
GROUP BY MONTH(Hire_Date) HAVING MONTH(Hire_Date) IN (1,9)

--9. HOW MANY EMPLOYEES WERE JOINED IN 1985?
SELECT YEAR(Hire_Date), COUNT(Employee_ID) FROM Employee 
GROUP BY YEAR(Hire_Date) HAVING YEAR(Hire_Date)=1985

--10. HOW MANY EMPLOYEES WERE JOINED EACH MONTH IN 1985.
SELECT YEAR(Hire_Date), MONTH(Hire_Date) AS 'Month', COUNT(Employee_ID) AS 'COUNT' FROM Employee 
GROUP BY YEAR(Hire_Date), MONTH(Hire_Date) HAVING YEAR(Hire_Date)=1985

--11. HOW MANY EMPLOYEES WERE JOINED IN MARCH 1985?
SELECT YEAR(Hire_Date), MONTH(Hire_Date) AS Mnth, COUNT(Employee_ID) AS CNT FROM Employee 
GROUP BY YEAR(Hire_Date), MONTH(Hire_Date) HAVING YEAR(Hire_Date)=1985 AND MONTH(Hire_Date)=3

--12. WHICH IS THE DEPARTMENT ID, HAVING GREATER THAN OR EQUAL TO 3 EMPLOYEES JOINED IN APRIL 1985?
SELECT EmpDepartment_ID FROM Employee WHERE YEAR(Hire_Date)=1985 AND MONTH(Hire_Date)=4
GROUP BY EmpDepartment_ID HAVING COUNT(Employee_ID)>=3

SELECT * FROM Location
SELECT * FROM Departments
SELECT * FROM Job
SELECT * FROM Employee

--JOINS
--1. LIST OUT EMPLOYEES WITH THEIR DEPARTMENT NAMES.
SELECT E.*,D.DeptName 
FROM Employee AS E 
INNER JOIN Department AS D 
ON E.EmpDepartment_ID=D.Department_ID

--2. DISPLAY EMPLOYEES WITH THEIR DESIGNATIONS.
SELECT E.*,J.Designation 
FROM Employee AS E 
INNER JOIN Job AS J 
ON E.EmpJob_ID=J.Job_ID

--3. DISPLAY THE EMPLOYEES WITH THEIR DEPARTMENT NAMES AND REGIONAL GROUPS.
SELECT E.*,D.DeptName,L.City 
FROM Employee AS E 
INNER JOIN Department AS D 
ON E.EmpDepartment_ID=D.Department_ID
INNER JOIN Location AS L 
ON D.DepLocation_ID=L.Location_ID
_______
--4. HOW MANY EMPLOYEES WHO ARE WORKING IN DIFFERENT DEPARTMENTS AND DISPLAY WITH DEPARTMENT NAMES.
SELECT E.*,DeptName FROM (SELECT EmpDepartment_ID,COUNT(1) AS EMPCNT FROM Employee GROUP BY EmpDepartment_ID )AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID

--5. HOW MANY EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT.
SELECT E.*,DeptName FROM (SELECT EmpDepartment_ID,COUNT(1) AS EMPCNT FROM Employee GROUP BY EmpDepartment_ID )AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
WHERE DeptName='Sales'

--6. WHICH IS THE DEPARTMENT HAVING GREATER THAN OR EQUAL TO 5 EMPLOYEES AND DISPLAY THE DEPARTMENT NAMES IN ASCENDING ORDER.
SELECT E.*,DeptName FROM (SELECT EmpDepartment_ID,COUNT(1) AS EMPCNT FROM Employee GROUP BY EmpDepartment_ID )AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
WHERE E.EMPCNT>=5 ORDER BY DeptName

--7. HOW MANY JOBS IN THE ORGANIZATION WITH DESIGNATIONS.
SELECT E.*,Designation FROM (SELECT EmpJob_ID,COUNT(1) AS EMPCNT FROM Employee GROUP BY EmpJob_ID )AS E
INNER JOIN Job AS J ON E.EmpJob_ID=J.Job_ID

--8. HOW MANY EMPLOYEES ARE WORKING IN "NEW YORK".
SELECT E.*,City FROM (SELECT EmpDepartment_ID,COUNT(1) AS EMPCNT FROM Employee GROUP BY EmpDepartment_ID )AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
INNER JOIN Location AS L ON L.Location_ID=D.DepLocation_ID
WHERE L.City='New York'

--9. DISPLAY THE EMPLOYEE DETAILS WITH SALARY GRADES.
SELECT *, SalGrade=
CASE
WHEN E.Salary<2000 THEN 'C'
WHEN E.Salary BETWEEN 2000 AND 5000 THEN 'B'
ELSE 'A'
END
FROM Employee AS E

--10. LIST OUT THE NO. OF EMPLOYEES ON GRADE WISE. 
SELECT E.SalGrade, COUNT(1) FROM 
(	SELECT Employee_ID,SalGrade=
	CASE
	WHEN Salary<2000 THEN 'C'
	WHEN Salary BETWEEN 2000 AND 5000 THEN 'B'
	ELSE 'A'
	END
	FROM Employee ) AS E
GROUP BY E.SalGrade

--11. DISPLAY THE EMPLOYEE SALARY GRADES AND NO. OF EMPLOYEES BETWEEN 2000 TO 5000 RANGE OF SALARY.
SELECT E.SalGrade, COUNT(1) FROM 
(	SELECT Employee_ID,SalGrade=
	CASE
	WHEN Salary<2000 THEN 'C'
	WHEN Salary BETWEEN 2000 AND 5000 THEN 'B'
	ELSE 'A'
	END
	FROM Employee 
	WHERE Salary BETWEEN 2000 AND 5000) AS E
GROUP BY E.SalGrade

--12. DISPLAY THE EMPLOYEE DETAILS WITH THEIR MANAGER NAMES. 
SELECT EM.*,ES.First_Name AS ManagerName FROM Employee AS EM INNER JOIN Employee AS ES
ON EM.Manager_ID=ES.Employee_ID

--13. DISPLAY THE EMPLOYEE DETAILS WHO EARN MORE THAN THEIR MANAGERS SALARIES. 
SELECT EM.*,ES.First_Name AS ManagerName, ES.Salary AS MngrSal FROM Employee AS EM INNER JOIN Employee AS ES
ON EM.Manager_ID=ES.Employee_ID
WHERE EM.Salary>ES.Salary

--14. SHOW THE NO. OF EMPLOYEES WORKING UNDER EVERY MANAGER. 
SELECT Manager_ID, COUNT(1) AS EmpCnt FROM Employee GROUP BY Manager_ID

--15. DISPLAY EMPLOYEE DETAILS WITH THEIR MANAGER NAMES. 
SELECT EM.*,ES.First_Name AS ManagerName FROM Employee AS EM INNER JOIN Employee AS ES
ON EM.Manager_ID=ES.Employee_ID

--16. DISPLAY ALL EMPLOYEES IN SALES OR OPERATION DEPARTMENTS. 
SELECT E.*,DeptName FROM (SELECT EmpDepartment_ID,COUNT(1) AS EMPCNT FROM Employee GROUP BY EmpDepartment_ID )AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
WHERE DeptName IN ('Sales','Operations')

--SET OPERATORS
--1. LIST OUT THE DISTINCT JOBS IN SALES AND ACCOUNTING DEPARTMENTS.
SELECT DISTINCT EmpJob_ID FROM Employee AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
WHERE DeptName IN ('Sales','Accounting')

--2. LIST OUT ALL THE JOBS IN SALES AND ACCOUNTING DEPARTMENTS.
SELECT EmpJob_ID FROM Employee AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
WHERE DeptName IN ('Sales','Accounting')

--3. LIST OUT THE COMMON JOBS IN RESEARCH AND ACCOUNTING DEPARTMENTS IN ASCENDING ORDER. 
SELECT EmpJob_ID FROM Employee AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
WHERE DeptName = 'Accounting' AND DeptName = 'Research'

--SUB QUERIES
--1. DISPLAY THE EMPLOYEES LIST WHO GOT THE MAXIMUM SALARY.
SELECT Last_Name, Salary FROM Employee WHERE Salary = (SELECT MAX(Salary) FROM Employee)

--2. DISPLAY THE EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT.
SELECT Last_Name, EmpDepartment_ID, DeptName FROM Employee,Department WHERE DeptName='Sales'
AND EmpDepartment_ID = Department_ID

SELECT Last_Name, First_Name, EmpDepartment_ID FROM Employee WHERE EmpDepartment_ID =
(SELECT Department_ID FROM Department WHERE DeptName='Sales')

--3. DISPLAY THE EMPLOYEES WHO ARE WORKING AS 'CLERK'.
SELECT Last_Name, Designation FROM Employee,Job WHERE Designation='Clerk'
AND EmpJob_ID = Job_ID

SELECT Last_Name, First_Name, EmpJob_ID FROM Employee WHERE EmpJob_ID =
(SELECT Job_ID FROM Job WHERE Designation='Clerk')

--4. DISPLAY THE LIST OF EMPLOYEES WHO ARE LIVING IN "NEW YORK".
SELECT E.*,City FROM (SELECT EmpDepartment_ID,COUNT(1) AS EMPCNT FROM Employee GROUP BY EmpDepartment_ID )AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
INNER JOIN Location AS L ON L.Location_ID=D.DepLocation_ID
WHERE L.City='New York'

--5. FIND OUT NO. OF EMPLOYEES WORKING IN "SALES" DEPARTMENT.
SELECT COUNT(1) as EmpCnt FROM Employee WHERE EmpDepartment_ID =
(SELECT Department_ID FROM Department WHERE DeptName='Sales')

--6. UPDATE THE EMPLOYEES SALARIES, WHO ARE WORKING AS CLERK ON THE BASIS OF 10%.
UPDATE Employee SET Salary=Salary*1.10
--SELECT Last_Name, Designation, Salary, (Salary*1.10)
FROM Employee,Job WHERE Designation='Clerk'
AND EmpJob_ID = Job_ID

--7. DELETE THE EMPLOYEES WHO ARE WORKING IN ACCOUNTING DEPARTMENT.
DELETE E
--SELECT * 
FROM Employee AS E
INNER JOIN Department AS D ON E.EmpDepartment_ID=D.Department_ID
WHERE DeptName ='Accounting'

--8. DISPLAY THE SECOND HIGHEST SALARY DRAWING EMPLOYEE DETAILS.
SELECT * FROM (SELECT *, RANK()OVER(ORDER BY Salary DESC) AS R FROM Employee ) AS RT
WHERE R=2

--9. DISPLAY THE N'TH HIGHEST SALARY DRAWING EMPLOYEE DETAILS.
CREATE FUNCTION NSAL (@NPOS INT)
RETURNS TABLE
AS RETURN ( SELECT * FROM (SELECT *, RANK()OVER(ORDER BY Salary DESC) AS R FROM Employee ) AS RT
			WHERE R=@NPOS)

SELECT * FROM dbo.NSAL(5)

--10. LIST OUT THE EMPLOYEES WHO EARN MORE THAN EVERY EMPLOYEE IN DEPARTMENT 30.
SELECT * FROM Employee WHERE Salary = 
(SELECT MAX(Salary) FROM Employee WHERE EmpDepartment_ID=30 GROUP BY EmpDepartment_ID)

--11. LIST OUT THE EMPLOYEES WHO EARN MORE THAN THE LOWEST SALARY IN DEPARTMENT 30.
SELECT * FROM Employee WHERE Salary > 
(SELECT MIN(Salary) FROM Employee WHERE EmpDepartment_ID=30 GROUP BY EmpDepartment_ID)

--12. FIND OUT WHOSE DEPARTMENT HAS NOT EMPLOYEES.
SELECT DISTINCT Department_ID, Manager_ID FROM Department,Employee WHERE Department_ID NOT IN 
(SELECT EmpDepartment_ID FROM Employee)

--13. FIND OUT WHICH DEPARTMENT DOES NOT HAVE ANY EMPLOYEES.
SELECT DISTINCT Department_ID, Manager_ID FROM Department,Employee WHERE Department_ID NOT IN 
(SELECT EmpDepartment_ID FROM Employee)

--14. FIND OUT THE EMPLOYEES WHO EARN GREATER THAN THE AVERAGE SALARY FOR THEIR DEPARTMENT.
SELECT * FROM Employee AS Emp INNER JOIN 
(SELECT EmpDepartment_ID,AVG(Salary) AS AvgSal FROM Employee GROUP BY EmpDepartment_ID) AS ASD
ON Emp.EmpDepartment_ID=ASD.EmpDepartment_ID
WHERE Salary >= AvgSal 

